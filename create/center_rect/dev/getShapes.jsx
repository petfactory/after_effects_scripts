function rd_ShapesToMasks_doIt(){    var comp = app.project.activeItem;    var shapeLayer = comp.selectedLayers[0];    var vert_list = []     // Iterate over the shape layer's paths, converting them to masks    var shapeContents = shapeLayer.property("ADBE Root Vectors Group");    var shapeGroup, shapeGroupContents, shapeGroupProp, shapePath;    for (var g=1; g<=shapeContents.numProperties; g++)    {        shapeGroup = shapeContents.property(g);        // Only process groups        if (shapeGroup.matchName !== "ADBE Vector Group")            continue;                /*        // Get the mask vertex offsets based on the shape group's position        var vertexXOffset = 0, vertexYOffset = 0;        try        {            // Get the vector group's transforms, specifically the Position property            vecGroupPos = shapeGroup.property("ADBE Vector Transform Group").property("ADBE Vector Position");            vecGroupAPt = shapeGroup.property("ADBE Vector Transform Group").property("ADBE Vector Anchor");                        // Calculate the offset to apply to each mask vertex            vertexXOffset = -vecGroupPos.value[0] + vecGroupAPt.value[0]; //comp.width/2 - vecGroupPos.value[0];            vertexYOffset = -vecGroupPos.value[1] + vecGroupAPt.value[1]; //comp.height/2 - vecGroupPos.value[1];        }        catch (e)        {}        */                // Look in each group for shape paths. These will be converted to masks        shapeGroupContents = shapeGroup.property("Contents");                for (var gp=1; gp<=shapeGroupContents.numProperties; gp++)        {            shapeGroupProp = shapeGroupContents.property(gp);            if (shapeGroupProp.matchName === "ADBE Vector Shape - Group")            {                try                {                    // Get the shape path info                    shapePath = shapeGroupProp.property("ADBE Vector Shape");                    //$.writeln(shapeGroupProp.name);                    //$.writeln(shapePath.name);                    verts = shapePath.value.vertices;                                        for (var v = 0; v < verts.length; v++)                    {                        $.writeln(verts[v][0], verts[v][1])                    }                                    ret                                                        }                catch (e)                {}            }        }    }}rd_ShapesToMasks_doIt()